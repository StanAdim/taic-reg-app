version: '3'

services:
  staging-events:
    build: .
    container_name: staging-reg-events
    working_dir: /var/www/html
    ports:
      - 2020:80
    volumes:
      - .:/var/www/html
      - /tmp:/tmp

    environment:
      APP_ENV: ${APP_ENV}  # Example environment variable
      APP_DEBUG: 'true'
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - staging-reg-events
    depends_on:
      - db-events-stage
    healthcheck:
      test: ["CMD", "curl", "-f", "https://events.ictc.go.tz"]
      interval: 30s
      timeout: 10s
      retries: 3

  db-events-stage:
    image: postgres:15.0
    container_name: ${DB_HOST}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 2021:${DB_PORT}
    networks:
      - staging-reg-events
    volumes:
      - pgeventsstagesdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USERNAME"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pgeventsstagesdata:
    driver: local

networks:
  staging-reg-events:
    driver: bridge
